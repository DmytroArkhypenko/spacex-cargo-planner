{"version":3,"sources":["components/Button/Button.jsx","store/searchReducer.js","components/Search/Search.jsx","store/shipmentsReducer.js","localStorage.js","store/index.js","components/Header/Header.jsx","api/index.js","components/CompanyListItem/CompanyListItem.jsx","components/CompaniesList/CompaniesList.jsx","helpers/index.js","components/CompanyPage/CompanyPage.jsx","App.jsx","index.jsx"],"names":["Button","title","func","className","type","onClick","SEARCH_INPUT","Search","dispatch","useDispatch","onQueryChange","event","query","preventDefault","target","value","onChange","placeholder","SET_SHIPMENTS","SAVE_SHIPMENT","shipmentsFromStore","shipmentsFromStorage","window","localStorage","getItem","JSON","parse","e","getShipmentsStateFromStorage","undefined","rootReducer","combineReducers","action","shipments","map","current","id","payload","boxes","boxesStr","getShipments","state","filter","shipment","name","toLowerCase","includes","getShipmentsState","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","shipmentsFromState","useSelector","fetch","then","response","ok","Error","status","json","allShipments","setItem","stringify","CompanyListItem","to","CompaniesList","length","uuidv4","countBays","array","split","i","parseFloat","Number","isNaN","total","reduce","acc","Math","ceil","CompanyPage","shipmentId","useParams","email","useState","cargoBays","setCargoBays","boxesState","setBoxesState","error","setError","onBoxesChange","isFinite","validate","useEffect","htmlFor","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oYAIaA,G,YAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACpB,wBACEC,UAAU,gBACVC,KAAK,SACLC,QAASH,EAHX,SAKGD,MCVCK,EAAe,eCKRC,G,MAAS,WACpB,IAAMC,EAAWC,cAEXC,EAAgB,SAACC,GDNG,IAACC,ECOzBD,EAAME,iBACNL,GDRyBI,ECQHD,EAAMG,OAAOC,MDRC,CAAEX,KAAME,EAAcM,YCW5D,OACE,qBAAKT,UAAU,mBAAf,SACE,uBACEA,UAAU,0BACVC,KAAK,OACLY,SAAU,SAACL,GAAD,OAAWD,EAAcC,IACnCM,YAAY,2B,gBChBdC,EAAgB,gBAChBC,EAAgB,eAQlBC,ECZwC,WAC1C,IACE,IAAMC,EAAuBC,OAAOC,aAAaC,QAAQ,aACzD,OAA6B,OAAzBH,EACK,GAGFI,KAAKC,MAAML,GAClB,MAAOM,GACP,QDGqBC,QAEEC,IAAvBT,IACFA,EAAqB,IAGhB,I,uBEZDU,EAAcC,0BAAgB,CAClCnB,MJH2B,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIoB,EAAW,uCACnD,OAAQA,EAAO5B,MACb,KAAKE,EACH,OAAO0B,EAAOpB,MAEhB,QACE,OAAOA,IIFXqB,UFU8B,WAA6C,IAA5CA,EAA2C,uDAA/Bb,EAAoBY,EAAW,uCAC1E,OAAQA,EAAO5B,MACb,KAAKc,EACH,OAAO,YAAIc,EAAOC,WACpB,KAAKd,EACH,OAAO,YAAIc,GAAWC,KAAI,SAACC,GACzB,OAAIA,EAAQC,KAAOJ,EAAOK,QAAQD,GACzB,2BACFD,GADL,IAEEG,MAAON,EAAOK,QAAQE,WAGnBJ,KAEX,QACE,OAAOF,MEtBAO,EAAe,SAACC,GAC3B,MAAoB,KAAhBA,EAAM7B,MACD6B,EAAMR,UAER,YAAIQ,EAAMR,WACdS,QAAO,SAACC,GAAD,OAAgC,OAAlBA,EAASC,MAAiBD,EAASC,KAAKC,cAC3DC,SAASL,EAAM7B,MAAMiC,mBAMfE,EAAoB,SAACN,GAAD,OAAWA,EAAMR,WAOnCe,EALDC,sBACZnB,EACAoB,8BAAoBC,0BAAgBC,OCjBzBC,EAAS,WACpB,IAAM7C,EAAWC,cACX6C,EAAqBC,YAAYR,GAWvC,OACE,sBAAK5C,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,2BACA,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEF,MAAM,OACNC,KAhBc,WCZUsD,MAAM,GAAD,OAFtB,wHAGdC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,SAG9B,OAAOH,EAASI,UDQbL,MAAK,SAACM,GAAD,OAAkBvD,EHVc,CAAEJ,KAAMc,EAAee,UGUf8B,UAgB5C,cAAC,EAAD,CACE9D,MAAM,OACNC,KAfmB,WFNc,IAAC+B,IEOZqB,EFP0BhC,OAAOC,aAAayC,QAAQ,YAAavC,KAAKwC,UAAUhC,c,QIRrGiC,G,YAAkB,SAAC,GAAD,IAAG9B,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAP,OAC7B,qBAAKzC,UAAU,gBAAf,SACE,cAAC,IAAD,CACEA,UAAU,sBACVgE,GAAE,sBAAiB/B,GAFrB,SAIGQ,QCJMwB,EAAgB,WAC3B,IAAMnC,EAAYsB,YAAYf,GAE9B,OAAKP,EAAUoC,OAUb,qBAAKlE,UAAU,iBAAf,SACG8B,EAAUC,KAAI,SAACS,GAAD,OACb,cAAC,EAAD,CAEEP,GAAIO,EAASP,GACbQ,KAAMD,EAASC,MAFV0B,oBAXT,sBAAKnE,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,qBACA,mBAAGA,UAAU,gBAAb,qD,QCMKoE,G,MAAY,SAACjC,GACxB,IAAKA,EACH,OAAO,EAIT,IADA,IAAMkC,EAAQlC,EAAMmC,MAAM,KACjBC,EAAI,EAAGA,EAAIF,EAAMH,OAAQK,GAAK,EACrCF,EAAME,GAAKC,WAAWH,EAAME,IACxBE,OAAOC,MAAML,EAAME,MACrBF,EAAME,GAAK,GAIf,IAAMI,EAAQN,EAAMO,QAAO,SAACC,EAAK7C,GAAN,OAAkB6C,EAAM7C,KAEnD,OAAO8C,KAAKC,KAAKJ,EAAQ,MCzBdK,EAAc,WACzB,IAAM3E,EAAWC,cAET2E,EAAeC,cAAfD,WAHuB,EAIA7B,YAAYR,GACxCL,QAAO,SAACC,GAAD,OAAcA,EAASP,KAAOgD,KAAY,GAD5CxC,EAJuB,EAIvBA,KAAM0C,EAJiB,EAIjBA,MAAOhD,EAJU,EAIVA,MAJU,EAOGiD,mBAAS,GAPZ,mBAOxBC,EAPwB,KAObC,EAPa,OAQKF,mBAAS,IARd,mBAQxBG,EARwB,KAQZC,EARY,OASLJ,mBAAS,IATJ,mBASxBK,EATwB,KASjBC,EATiB,KAWzBC,EAAgB,SAACnF,GACrBA,EAAME,iBADyB,IAEvBE,EAAUJ,EAAMG,OAAhBC,ODvBY,SAACA,GACvB,GAAc,KAAVA,EACF,OAAO,EAGT,GAAIA,EAAO,CAET,IADA,IAAMyD,EAAQzD,EAAM0D,MAAM,KACjBC,EAAI,EAAGA,EAAIF,EAAMH,OAAQK,GAAK,EACrC,IAAKE,OAAOmB,UAAUvB,EAAME,IAC1B,OAAO,EAIX,GAAIF,EAAMH,OAAS,GACjB,OAAO,EAGX,OAAO,GCOW2B,CAASjF,IAEvB4E,EAAc5E,GACd0E,EAAalB,EAAUxD,IACvB8E,EAAS,IACTrF,ERtBgD,CACpDJ,KAAMe,EACNkB,QAAS,CAAED,GQoBsBgD,ERpBlB7C,SQoB8BxB,OAEzC8E,EAAS,0BACTJ,EAAa,KAcjB,OAVAQ,qBAAU,WACH3D,IACHqD,EAAc,IACdF,EAAa,IAGfE,EAAcrD,GACdmD,EAAalB,EAAUjC,MACtB,CAAC8C,EAAYM,IAGd,sBAAKvF,UAAU,eAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqCyC,IACrC,mBAAGzC,UAAU,sBAAb,SAAoCmF,IACpC,oBAAGnF,UAAU,qBAAb,2CAEE,+BAAOqF,OAET,sBAAKrF,UAAU,sBAAf,UACE,uBACEA,UAAU,6BACV+F,QAAQ,cAFV,yBAMA,qBAAK/F,UAAU,iCAAf,SACE,uBACEiC,GAAG,cACHjC,UAAU,wCACVC,KAAK,OACLY,SAAU,SAACL,GAAD,OAAWmF,EAAcnF,IACnCI,MAAO2E,GAAc,OAGzB,mBAAGvF,UAAU,6BAAb,SAA2CyF,WCvCpCO,MAxBf,WACE,OACE,mCACE,sBAAKhG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,qBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,0BAA0BC,OAAK,EAA3C,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUlC,GAAG,oBCb3BmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUxD,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINyD,SAASC,eAAe,W","file":"static/js/main.e148da05.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nexport const Button = ({ title, func }) => (\n  <button\n    className=\"styled_button\"\n    type=\"button\"\n    onClick={func}\n  >\n    {title}\n  </button>\n);\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  func: PropTypes.func.isRequired,\n};\n","const SEARCH_INPUT = 'SEARCH_INPUT';\n\nexport const searchByName = (query) => ({ type: SEARCH_INPUT, query });\n\nexport const searchReducer = (query = '', action) => {\n  switch (action.type) {\n    case SEARCH_INPUT:\n      return action.query;\n\n    default:\n      return query;\n  }\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { searchByName } from '../../store/searchReducer';\nimport './Search.scss';\n\nexport const Search = () => {\n  const dispatch = useDispatch();\n\n  const onQueryChange = (event) => {\n    event.preventDefault();\n    dispatch(searchByName(event.target.value));\n  };\n\n  return (\n    <div className=\"search_container\">\n      <input\n        className=\"search_container__input\"\n        type=\"text\"\n        onChange={(event) => onQueryChange(event)}\n        placeholder=\"Search company ...\"\n      />\n    </div>\n  );\n};\n","/* eslint-disable no-debugger */\nimport { getShipmentsStateFromStorage } from '../localStorage';\n\nconst SET_SHIPMENTS = 'SET_SHIPMENTS';\nconst SAVE_SHIPMENT = 'SET_SHIPMENT';\n\nexport const setShipments = (shipments) => ({ type: SET_SHIPMENTS, shipments });\nexport const saveShipmentToState = (id, boxesStr) => ({\n  type: SAVE_SHIPMENT,\n  payload: { id, boxesStr },\n});\n\nlet shipmentsFromStore = getShipmentsStateFromStorage();\n\nif (shipmentsFromStore === undefined) {\n  shipmentsFromStore = [];\n}\n\nexport const shipmentsReducer = (shipments = shipmentsFromStore, action) => {\n  switch (action.type) {\n    case SET_SHIPMENTS:\n      return [...action.shipments];\n    case SAVE_SHIPMENT:\n      return [...shipments].map((current) => {\n        if (current.id === action.payload.id) {\n          return {\n            ...current,\n            boxes: action.payload.boxesStr,\n          };\n        }\n        return current;\n      });\n    default:\n      return shipments;\n  }\n};\n","export const getShipmentsStateFromStorage = () => {\n  try {\n    const shipmentsFromStorage = window.localStorage.getItem('shipments');\n    if (shipmentsFromStorage === null) {\n      return [];\n    }\n\n    return JSON.parse(shipmentsFromStorage);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveShipmentsStateToStorage = (shipments) => window.localStorage.setItem('shipments', JSON.stringify(shipments));\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { shipmentsReducer } from './shipmentsReducer';\nimport { searchReducer } from './searchReducer';\n\nconst rootReducer = combineReducers({\n  query: searchReducer,\n  shipments: shipmentsReducer,\n});\n\nexport const getShipments = (state) => {\n  if (state.query === '') {\n    return state.shipments;\n  }\n  return [...state.shipments]\n    .filter((shipment) => shipment.name !== null && shipment.name.toLowerCase()\n      .includes(state.query.toLowerCase()));\n};\n\nexport const getCurrentShipment = (state) => [...state.shipments]\n  .filter((shipment) => shipment.id === state.shipemntId);\n\nexport const getShipmentsState = (state) => state.shipments;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport './Header.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '../Button';\nimport { Search } from '../Search';\nimport { getShipments } from '../../api';\nimport { setShipments } from '../../store/shipmentsReducer';\nimport { saveShipmentsStateToStorage } from '../../localStorage';\nimport { getShipmentsState } from '../../store';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const shipmentsFromState = useSelector(getShipmentsState);\n\n  const loadShipments = () => {\n    getShipments()\n      .then((allShipments) => dispatch(setShipments(allShipments)));\n  };\n\n  const saveStateToStorage = () => {\n    saveShipmentsStateToStorage(shipmentsFromState);\n  };\n\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__title\">Cargo Planner</h1>\n      <Search />\n      <div className=\"actions\">\n        <Button\n          title=\"Load\"\n          func={loadShipments}\n        />\n        <Button\n          title=\"Save\"\n          func={saveStateToStorage}\n        />\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://bitbucket.org/artur_cation/spacex-cargo-planner/raw/1a9e1c0ff090a114999c47b7e9388fbc88bd083b/shipments.json';\n\nexport const getShipments = () => fetch(`${BASE_URL}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status}`);\n    }\n\n    return response.json();\n  });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './CompanyListItem.scss';\n\nexport const CompanyListItem = ({ id, name }) => (\n  <div className=\"company__item\">\n    <Link\n      className=\"company__item__link\"\n      to={`/shipmentId=${id}`}\n    >\n      {name}\n    </Link>\n  </div>\n);\n\nCompanyListItem.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getShipments } from '../../store';\nimport './CompaniesList.scss';\nimport { CompanyListItem } from '../CompanyListItem';\n\nexport const CompaniesList = () => {\n  const shipments = useSelector(getShipments);\n\n  if (!shipments.length) {\n    return (\n      <div className=\"message\">\n        <h2 className=\"message__title\">Ups ...</h2>\n        <p className=\"message__body\">Press load button to get shipments!</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"companies_list\">\n      {shipments.map((shipment) => (\n        <CompanyListItem\n          key={uuidv4()}\n          id={shipment.id}\n          name={shipment.name}\n        />\n      ))}\n    </div>\n  );\n};\n","export const validate = (value) => {\n  if (value === '') {\n    return true;\n  }\n\n  if (value) {\n    const array = value.split(',');\n    for (let i = 0; i < array.length; i += 1) {\n      if (!Number.isFinite(+array[i])) {\n        return false;\n      }\n    }\n\n    if (array.length > 10) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const countBays = (boxes) => {\n  if (!boxes) {\n    return 0;\n  }\n\n  const array = boxes.split(',');\n  for (let i = 0; i < array.length; i += 1) {\n    array[i] = parseFloat(array[i]);\n    if (Number.isNaN(array[i])) {\n      array[i] = 0;\n    }\n  }\n\n  const total = array.reduce((acc, current) => acc + current);\n\n  return Math.ceil(total / 10);\n};\n","/* eslint-disable no-debugger */\n/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getShipmentsState } from '../../store';\nimport { saveShipmentToState } from '../../store/shipmentsReducer';\nimport './CompanyPage.scss';\nimport { validate, countBays } from '../../helpers';\n\nexport const CompanyPage = () => {\n  const dispatch = useDispatch();\n\n  const { shipmentId } = useParams();\n  const { name, email, boxes } = useSelector(getShipmentsState)\n    .filter((shipment) => shipment.id === shipmentId)[0];\n\n  const [cargoBays, setCargoBays] = useState(0);\n  const [boxesState, setBoxesState] = useState('');\n  const [error, setError] = useState('');\n\n  const onBoxesChange = (event) => {\n    event.preventDefault();\n    const { value } = event.target;\n    const isValid = validate(value);\n    if (isValid) {\n      setBoxesState(value);\n      setCargoBays(countBays(value));\n      setError('');\n      dispatch(saveShipmentToState(shipmentId, value));\n    } else {\n      setError('The string is Invalid!');\n      setCargoBays(0);\n    }\n  };\n\n  useEffect(() => {\n    if (!boxes) {\n      setBoxesState('');\n      setCargoBays(0);\n    }\n\n    setBoxesState(boxes);\n    setCargoBays(countBays(boxes));\n  }, [shipmentId, boxesState]);\n\n  return (\n    <div className=\"company_page\">\n      <h2 className=\"company_page__title\">{name}</h2>\n      <p className=\"company_page__email\">{email}</p>\n      <p className=\"company_page__bays\">\n        Number of required cargo bays:\n        <span>{cargoBays}</span>\n      </p>\n      <div className=\"company_page__boxes\">\n        <label\n          className=\"company_page__boxes__label\"\n          htmlFor=\"boxes_input\"\n        >\n          Cargo boxes\n        </label>\n        <div className=\"company_page__boxes__container\">\n          <input\n            id=\"boxes_input\"\n            className=\"company_page__boxes__container__input\"\n            type=\"text\"\n            onChange={(event) => onBoxesChange(event)}\n            value={boxesState || ''}\n          />\n        </div>\n        <p className=\"company_page__boxes__error\">{error}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { CompaniesList } from './components/CompaniesList';\nimport { CompanyPage } from './components/CompanyPage';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <Header />\n        <div className=\"app__page\">\n          <div className=\"app__page__sidebar\">\n            <CompaniesList />\n          </div>\n          <div className=\"app__page__content\">\n            <Switch>\n              <Route path=\"/shipmentId=:shipmentId\" exact>\n                <CompanyPage />\n              </Route>\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}